package Account;
import java.time.LocalDate;
import java.time.Period;
import java.util.Scanner;
import java.util.List;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;

public class Client extends Identification {
	
	public static List<Client> allClients = new ArrayList<>();
	
    private String name;
    private String cpf;
    private String cellphone;
    private String email;
    private String address;
    private LocalDate birthday;

    public Client(String name, String cpf, String cellphone, String email, String address, LocalDate birthday) {
        super();
        this.setName(name);
        this.setCpf(cpf);
        this.setCellPhone(cellphone);
        this.setEmail(email);
        this.setAddress(address);
        this.birthday = birthday;
    }

    public int getIdade() {
        return Period.between(birthday, LocalDate.now()).getYears();
    }

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getCpf() {
		return cpf;
	}

	public void setCpf(String cpf) {
		this.cpf = cpf;
	}

	public String getCellPhone() {
		return cellphone;
	}

	public void setCellPhone(String cellphone) {
		this.cellphone = cellphone;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}
	public LocalDate getBirthDay() {
		return birthday;
	}

	public void setBirthDay(LocalDate birthday) {
		this.birthday = birthday;
	}

    // getters and setters for all fields
	
	
	public static void openAccount() {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Digite o nome:");
        String name = scanner.nextLine();
        
        LocalDate birthday = null;
        while (birthday == null) {
            System.out.println("Digite a data de nascimento (formato: AAAA-MM-DD):");
            String birthdate = scanner.nextLine();
            try {
                birthday = LocalDate.parse(birthdate);
            } catch (DateTimeParseException e) {
                System.out.println("Erro: A data de nascimento inserida não é válida. Por favor, tente novamente.");
                birthday = null;
            }
        }

        System.out.println("Digite o CPF:");
        String cpf = scanner.nextLine();

        System.out.println("Digite o número do celular:");
        String cellphone = scanner.nextLine();

        System.out.println("Digite o e-mail:");
        String email = scanner.nextLine();

        System.out.println("Digite o endereço:");
        String address = scanner.nextLine();
        
        scanner.close();

        Client.allClients.add( new Client(name, cpf, cellphone, email, address, birthday));
    }
	
	public static void listarClientes() {
        System.out.println("ID | Data de Criação | Nome | CPF | Celular | E-mail | Endereço | Data de Nascimento | Idade");
        System.out.println("---------------------------------------------------------------------------------------------------");

        for (Client client : allClients) {
            System.out.println(client.getID() + " | " +
                               client.getDataCriacao() + " | " +
                               client.getName() + " | " +
                               client.getCpf() + " | " +
                               client.getCellPhone() + " | " +
                               client.getEmail() + " | " +
                               client.getAddress() + " | " +
                               client.getBirthDay() + " | " +
                               client.getIdade());
        }
    }
	
}
